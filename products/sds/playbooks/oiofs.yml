---
- name: Setup oiofs environment
  hosts: oiofs
  any_errors_fatal: true
  become: true
  environment: "{{ default_openio_environment }}"
  vars_files:
    - ../vars/sds.yml
    - ../vars/oiofs.yml
  tags:
    - check
    - checks
    - check
    - checks
    - facts

  pre_tasks:
    - name: Gathering needed facts
      setup:
        gather_subset: min
        filter: "{{ item }}"
      with_items:
        - ansible_distribution
        - ansible_os_family
        - ansible_system
        - ansible_lsb
        - ansible_distribution_release
        - ansible_distribution_version
        - ansible_distribution_major_version

    - name: Gathering network facts
      setup:
        gather_subset: network

    - name: Gathering needed facts
      setup:
        gather_subset: hardware
        filter: "{{ item }}"
      with_items:
        - ansible_devices
        - ansible_mounts
        - ansible_processor_vcpus

    - name: no ECD defined for this node
      assert:
        that:
          - groups.ecd is defined
          - inventory_hostname in groups.ecd
      ignore_errors: "{{ openio_ignore_assert_errors | d(default_openio_ignore_assert_errors) }}"

    - name: no OIOPROXY defined for this node
      assert:
        that:
          - groups.oioproxy is defined
          - inventory_hostname in groups.oioproxy
      ignore_errors: "{{ openio_ignore_assert_errors | d(default_openio_ignore_assert_errors) }}"

    - name: no credentials for the oiofs repository
      assert:
        that:
          - openio_repositories_credentials is defined
          - openio_repositories_credentials.oiofs is defined
          - openio_repositories_credentials.oiofs.user is defined
          - openio_repositories_credentials.oiofs.password is defined
      ignore_errors: "{{ openio_ignore_assert_errors | d(default_openio_ignore_assert_errors) }}"

    - name: Cache device is absent
      assert:
        that:
          - oiofs_cache_device.split('/')[-1] in ansible_devices
      ignore_errors: "{{ openio_ignore_assert_errors | d(default_openio_ignore_assert_errors) }}"

    - name: Cache device is mounted
      assert:
        that:
          - oiofs_cache_folder in ansible_mounts | selectattr('device', 'equalto', oiofs_cache_device) | map(attribute='mount') | list
      ignore_errors: "{{ openio_ignore_assert_errors | d(default_openio_ignore_assert_errors) }}"

- name: Setup oiofs environment
  hosts: oiofs
  any_errors_fatal: true
  become: true
  environment: "{{ default_openio_environment }}"
  vars_files:
    - ../vars/sds.yml
    - ../vars/oiofs.yml
  tags:
    - repo
    - repository
    - users
    - user
  roles:
    - role: repositories
      openio_repository_manage_openstack_repository: false
      openio_repository_manage_epel_repository: false
      openio_repository_mirror_host: "{{ default_openio_mirror }}"
      openio_repository_no_log: "{{ default_openio_no_log }}"
      openio_repository_products:
        oiofs:
          user: "{{ openio_repositories_credentials.oiofs.user }}"
          password: "{{ openio_repositories_credentials.oiofs.password }}"
          release: "{{ openio_sds_release | d(default_openio_sds_release) }}"

    - role: users

- name: OpenIO FS - Collect facts of redis nodes
  hosts: "{{ default_oiofs_global_redis_inventory_groupname }}"
  environment: "{{ default_openio_environment }}"
  vars_files:
    - ../vars/sds.yml
    - ../vars/oiofs.yml
  tags:
    - redis
    - oiofs

  tasks:
    - name: Gathering network facts
      setup:
        gather_subset: network

    - name: set openio_bind_address as fact
      set_fact:
        openio_bind_address: "{{ openio_bind_address | d(default_openio_bind_address) }}"

- name: Install and configure OIOFS
  hosts: oiofs
  any_errors_fatal: true
  become: true
  environment: "{{ default_openio_environment }}"
  vars_files:
    - ../vars/sds.yml
    - ../vars/oiofs.yml
  tags:
    - oiofs

  roles:
    - role: oiofs
      oiofs_mountpoint_default_mount_directory: "{{ oiofs_global_mount_directory }}"
      oiofs_mountpoint_default_cache_directory: "{{ oiofs_cache_folder }}"
      oiofs_mountpoint_default_cache_size_bytes: "{{ ansible_devices[oiofs_cache_device.split('/')[-1]]['size'] | human_to_bytes }}"
      oiofs_mountpoint_default_cache_size_for_flush_activation: "{{ ((oiofs_mountpoint_default_cache_size_bytes | int) * (oiofs_cache_high_watermark | int) / 100) | int }}"
      oiofs_mountpoint_default_cache_size_on_flush_bytes: "{{ ((oiofs_mountpoint_default_cache_size_bytes | int) * (oiofs_cache_low_watermark | int) / 100) | int }}"

- name: Exports oiofs
  hosts: oiofs
  any_errors_fatal: true
  become: true
  environment: "{{ default_openio_environment }}"
  vars_files:
    - ../vars/sds.yml
    - ../vars/oiofs.yml
  tags:
    - exports
    - export

  roles:
    - role: nfs
      openio_nfs_exports: "{{ oiofs_mountpoints | mounts2nfs(oiofs_global_mount_directory) }}"
      when: oiofs_mountpoints | mounts2nfs(oiofs_global_mount_directory)

    - role: samba
      openio_samba_mountpoints: "{{ oiofs_mountpoints | mounts2samba(oiofs_global_mount_directory) }}"
      openio_samba_service_state: started
      openio_samba_service_enabled: true
      when: oiofs_mountpoints | mounts2samba(oiofs_global_mount_directory)

  tasks:
    - name: SAMBA - Register Samba user password
      shell: >
        (pdbedit --user={{ samba_user }} 2>&1 > /dev/null) \
        || (echo {{ samba_user_password }}; echo {{ samba_user_password }}) \
        | smbpasswd -s -a {{ samba_user }}
      no_log: "{{ default_openio_no_log }}"
      register: create_user_output
      changed_when: "'Added user' in create_user_output.stdout"
      run_once: true
      when: oiofs_mountpoints | mounts2samba(oiofs_global_mount_directory) | bool
...
