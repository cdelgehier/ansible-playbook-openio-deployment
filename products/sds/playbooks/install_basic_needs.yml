---
- name: BASE - Basic requirements to install
  hosts: openio
  become: true
  any_errors_fatal: "{{ default_openio_any_errors_fatal }}"
  environment: "{{ default_openio_environment }}"
  vars_files:
    - ../vars/sds.yml

  pre_tasks:
    - name: Define installation of oioswift extended
      set_fact:
        oioswift_extended: "{{ true \
          if openio_repositories_credentials is defined and openio_repositories_credentials.get('oioswiftext') \
          else false }}"
      tags:
        - install
        - configure

  roles:
    - role: users
      openio_users_add:
        - username: openio
          uid: "{{ default_openio_user_openio_uid }}"
          name: openio account
          group: openio
          groups: []
          home_create: true
          shell: /bin/bash
      openio_users_groups:
        - groupname: openio
          gid: "{{ default_openio_group_openio_gid }}"

    - role: repositories
      openio_repository_openstack_release: "{{ default_openio_openstack_distro }}"
      openio_repository_mirror_host: "{{ default_openio_mirror }}"
      openio_repository_no_log: "{{ default_openio_no_log }}"
      openio_repository_products:
        sds:
          release: "{{ openio_sds_release | d(default_openio_sds_release) }}"
      tags: install

    - role: repositories
      openio_repository_mirror_host: "{{ default_openio_mirror }}"
      openio_repository_manage_openstack_repository: false
      openio_repository_no_log: "{{ default_openio_no_log }}"
      openio_repository_products:
        replicator:
          release: "{{ openio_sds_release | d(default_openio_sds_release) }}"
          user: "{{ openio_repositories_credentials.replicator.user }}"
          password: "{{ openio_repositories_credentials.replicator.password }}"
      when:
        - groups.replicator is defined
        - groups.replicator | length >= 1  | default(false)
      tags: install

    - role: repositories
      openio_repository_mirror_host: "mirror2.openio.io"
      openio_repository_openstack_release: "{{ default_openio_openstack_distro }}"
      openio_repository_no_log: "{{ default_openio_no_log }}"
      openio_repository_products:
        sds:
          release: "{{ openio_sds_release | d(default_openio_sds_release) }}/unstable"
      when: openio_unstable_repo | default(default_openio_unstable_repo)
      tags: install

    - role: repositories
      openio_repository_manage_openstack_repository: false
      openio_repository_manage_epel_repository: false
      openio_repository_mirror_host: "{{ default_openio_mirror }}"
      openio_repository_no_log: "{{ default_openio_no_log }}"
      openio_repository_products:
        oioswiftext:
          release: "{{ openio_sds_release | d(default_openio_sds_release) }}"
          user: "{{ openio_repositories_credentials.oioswiftext.user }}"
          password: "{{ openio_repositories_credentials.oioswiftext.password }}"
      when: oioswift_extended
      tags: install

    - role: ntp
      when: default_ntp_enabled

    - role: gridinit
      openio_gridinit_conf_location: "/etc/gridinit.d/{*,*/*}"
      openio_gridinit_enabled: "{{ default_openio_services_systemd_enabled }}"
      openio_gridinit_provision_only: "{{ default_openio_maintenance_mode }}"
      ignore_errors: "{{ ansible_check_mode }}"

  tasks:
    - name: Install iproute
      package:
        name: "{{ 'iproute' if ansible_os_family == 'RedHat' else 'iproute2' }}"
      tags: install
...
