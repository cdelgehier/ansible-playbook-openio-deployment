---
- name: Generate oio-blob-indexer inventory
  set_fact:
    inventory: >-
      {% set _hash = {'id': openio_blob_indexer_id, 'ip': openio_bind_address, 'port': 0, 'volume': openio_blob_indexer_volume, 'partition': mount.partition, 'config': openio_bolb_index_config} -%}
      {% set _array = inventory.namespaces[namespace | d(default_namespace)].services.oioblobindexer | default([]) | union([_hash]) -%}
      {{ inventory | combine({ 'namespaces': { namespace | d(default_namespace): { 'services': { 'oioblobindexer': _array } } } }, recursive=true) }}
  vars:
    openio_blob_indexer_serviceid: "{{ idx }}"
    openio_blob_indexer_id: "{{ namespace | d(default_namespace) }}-oioblobindexer-{{ openio_blob_indexer_serviceid }}"
    openio_bolb_index_config: {}
    openio_blob_indexer_volume: "{{ mount.mountpoint }}/{{ namespace | d(default_namespace) }}/rawx-{{ openio_blob_indexer_serviceid }}"
  with_items: "{{ openio_data_mounts }}"
  loop_control:
    loop_var: mount
    index_var: idx
  when:
    - openio_metadata_mounts is defined
    - "'oio-blob-indexer' in group_names"
...
