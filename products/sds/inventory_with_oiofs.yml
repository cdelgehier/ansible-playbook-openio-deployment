---
all:
  hosts:
    node1:
      ansible_host: IP_ADDRESS_OF_NODE1
      openio_data_mounts:
        - mountpoint: /mnt/data1
          partition: /dev/vdb
        - mountpoint: /mnt/data2
          partition: /dev/vdc
      openio_metadata_mounts:
        - mountpoint: /mnt/metadata1
          partition: /dev/vdd
          meta2_count: 2
    node2:
      ansible_host: IP_ADDRESS_OF_NODE2
      openio_data_mounts:
        - mountpoint: /mnt/data1
          partition: /dev/vdb
        - mountpoint: /mnt/data2
          partition: /dev/vdc
      openio_metadata_mounts:
        - mountpoint: /mnt/metadata1
          partition: /dev/vdd
          meta2_count: 2
    node3:
      ansible_host: IP_ADDRESS_OF_NODE3
      openio_data_mounts:
        - mountpoint: /mnt/data1
          partition: /dev/vdb
        - mountpoint: /mnt/data2
          partition: /dev/vdc
      openio_metadata_mounts:
        - mountpoint: /mnt/metadata1
          partition: /dev/vdd
          meta2_count: 2

    # node for OIOFS
    node4:
      ansible_host: IP_ADDRESS_OF_NODE4
      openio_data_mounts: []
      openio_metadata_mounts: []

  vars:
    ansible_user: root
    #ansible_user: ubuntu
    #ansible_user: centos

    # Disable check of mountpoint matching
    openio_checks_filter:
      mountpoint: false

  children:
    openio:
      children:
        fronts: {}
        backs: {}
        oiofs: {}
        oiofs_redis: {}

      vars:
        namespace: OPENIO
        namespace_storage_policy: "THREECOPIES"

        openio_bind_interface: '{{ ansible_default_ipv4.alias }}'
        openio_bind_address: '{{ ansible_default_ipv4.address }}'

        openio_oioswift_users:
          - name: "demo:demo"
            password: "DEMO_PASS"
            roles:
              - admin

        # Credentials for private features (contact us)
        openio_repositories_credentials:
          oiofs:
            user: OIOFS_REPO_USER
            password: OIOFS_REPO_PASSWORD

    # what is not used for storage
    fronts:
      hosts: {}

    # what is used for storage
    backs:
      hosts:
        node1: {}
        node2: {}
        node3: {}

### SDS
    account:
      children:
        backs: {}

    beanstalkd:
      children:
        backs: {}

    conscience:
      hosts:
        node3: {}

    conscience-agent:
      children:
        backs: {}

    ecd:
      children:
        backs: {}
      hosts:
        node4: {}


    meta:
      children:
        meta0: {}
        meta1: {}
        meta2: {}

    meta0:
      hosts:
        node1: {}
        node2: {}
        node3: {}

    meta1:
      hosts:
        node1: {}
        node2: {}
        node3: {}

    meta2:
      hosts:
        node1: {}
        node2: {}
        node3: {}

    namespace:
      children:
        openio: {}
      hosts:
        node4: {}
      vars:
        openio_namespace_conscience_url: "{{ hostvars[groups['conscience'][0]]['openio_bind_address'] }}:6000"

    oio-blob-indexer:
      children:
        backs: {}

    oio-blob-rebuilder:
      children:
        backs: {}

    oio-event-agent:
      children:
        backs: {}

    oioproxy:
      children:
        openio: {}
      hosts:
        node4: {}

    oioswift:
      children:
        backs: {}
      vars:
        openio_oioswift_pipeline: "{{ pipeline_tempauth }}"
        openio_oioswift_filter_tempauth:
          "{{ {'use': 'egg:oioswift#tempauth'} | combine(openio_oioswift_users | dict_to_tempauth) }}"
    rawx:
      children:
        backs: {}

    rdir:
      children:
        backs: {}

    redis:
      hosts:
        node1: {}
        node2: {}
        node3: {}

    zookeeper:
      hosts:
        node1: {}
        node2: {}
        node3: {}

### OIOFS
    oiofs:
      hosts:
        node4: {}
      vars:
        oiofs_global_mount_directory: "/mnt"
        oiofs_global_redis_sentinel_servers: "{{ groups[default_oiofs_global_redis_inventory_groupname] \
          | map('extract', hostvars, ['openio_bind_address']) \
          | map('regex_replace', '$', ':6012')
          | list }}"

        ## CACHE
        oiofs_cache_device: /dev/vdb1
        oiofs_cache_folder: "{{ oiofs_global_mount_directory }}/cache"
        oiofs_cache_high_watermark: 80
        oiofs_cache_low_watermark: 50

        # USERS
        samba_user: smbguest
        samba_user_password: samba
        openio_users_add:
          - username: smbguest
            uid: 6000
            name: Samba guest account
            group: smbguest
            groups: []
            home_create: true
            shell: /bin/bash
            update_password: on_create
            password: "{{ samba_user_password | password_hash('sha512')}}"
        openio_users_groups:
          - groupname: smbguest
            gid: 6000

        oiofs_mountpoints:
          - active_mode: true
            namespace: "{{ namespace }}"
            # account/container
            account: MY_ACCOUNT1
            container: MY_CONTAINER_EXPORTED_NFS
            state: present
            http_server: 127.0.0.1:6989

            # SDS
            openio_sds_conscience_url: "{{ openio_namespace_conscience_url }}"
            oioproxy_url: "{{ openio_bind_address }}:6006"
            ecd_url: "{{ openio_bind_address }}:6017"
            redis_sentinel_servers: "{{ oiofs_global_redis_sentinel_servers }}"
            redis_sentinel_name: "{{ namespace }}-master-1"

            # EXPORTS
            user: root
            group: root
            ignore_flush: true
            auto_retry: false
            export: nfs
            nfs_exports:
              client: "*"
              options:
                - "rw"
                - "async"
                - "no_root_squash"
                - "fsid=1"
              uid: 0
              gid: 0

          - active_mode: true
            namespace: "{{ namespace }}"
            # account/container
            account: MY_ACCOUNT1
            container: MY_CONTAINER_EXPORTED_SAMBA
            state: present
            http_server: 127.0.0.1:6990

            # SDS
            openio_sds_conscience_url: "{{ openio_namespace_conscience_url }}"
            oioproxy_url: "{{ openio_bind_address }}:6006"
            ecd_url: "{{ openio_bind_address }}:6017"
            redis_sentinel_servers: "{{ oiofs_global_redis_sentinel_servers }}"
            redis_sentinel_name: "{{ namespace }}-master-1"

            # EXPORTS
            user: root
            group: root
            ignore_flush: true
            auto_retry: false
            export: samba
            samba_exports:
              comment: Samba oiofs
              ? "ea support"
              : "yes"
              export_name: MY_CONTAINER_EXPORTED_SAMBA
              public: "yes"
              ? "read only"
              : "no"
              ? "vfs objects"
              : "catia fruit streams_xattr"
              writeable: "yes"

        oiofs_redis:
          hosts: {}

    oiofs_redis:
      hosts: {}
...
